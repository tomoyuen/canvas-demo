{"version":3,"sources":["webpack:///./node_modules/stats.js/build/stats.min.js","webpack:///./src/geometries/hilbert3D.js","webpack:///./node_modules/three/examples/js/renderers/Projector.js","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["f","e","module","exports","this","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","hilbert3D","center","THREE","size","iterations","v0","v1","v2","v3","v4","v5","v6","v7","half","vec_s","x","y","z","vec","tmp","Array","prototype","push","apply","RenderableObject","id","object","renderOrder","RenderableFace","RenderableVertex","normalModel","Vector3","vertexNormalsModel","vertexNormalsLength","color","Color","material","uvs","Vector2","position","positionWorld","positionScreen","Vector4","visible","copy","vertex","RenderableLine","vertexColors","RenderableSprite","rotation","scale","Projector","_object","_objectCount","_vertex","_vertexCount","_face","_faceCount","_line","_lineCount","_sprite","_spriteCount","_modelMatrix","_objectPool","_objectPoolLength","_vertexPool","_vertexPoolLength","_facePool","_facePoolLength","_linePool","_linePoolLength","_spritePool","_spritePoolLength","_renderData","objects","lights","elements","_vector3","_vector4","_clipBox","Box3","_boundingBox","_points3","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelViewProjectionMatrix","_normalMatrix","Matrix3","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","camera","console","warn","project","unprojectVector","unproject","pickingRay","error","RenderList","normals","colors","normalMatrix","setObject","value","getNormalMatrix","matrixWorld","projectVertex","applyMatrix4","invW","pushVertex","getNextVertexInPool","set","pushNormal","pushColor","pushUv","checkTriangleVisibility","intersectsBox","setFromPoints","checkBackfaceCulling","pushLine","clipLine","multiplyScalar","getNextLineInPool","VertexColors","fromArray","pushTriangle","side","DoubleSide","getNextFaceInPool","subVectors","cross","applyMatrix3","normalize","i","normal","arguments","uv","FaceColors","renderList","projectObject","Light","Mesh","Line","Points","frustumCulled","intersectsObject","addObject","Sprite","intersectsSprite","getNextObjectInPool","setFromMatrixPosition","pushPoint","getNextSpriteInPool","abs","projectionMatrix","face","line","sprite","painterSort","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","projectScene","scene","sortObjects","sortElements","autoUpdate","updateMatrixWorld","parent","matrixWorldInverse","multiplyMatrices","setFromMatrix","sort","o","ol","geometry","BufferGeometry","isMultiMaterial","isArray","attributes","groups","undefined","positions","array","morphTargets","morphAttributes","morphInfluences","morphTargetInfluences","tl","influence","target","getX","getY","getZ","index","indices","group","materialIndex","start","count","Geometry","vertices","faces","faceVertexUvs","vl","targetVertex","fl","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","modelViewMatrix","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"js/chunk-3b0945b4.8a1c47be.js","sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","/**\n * Hilbert Curve: Generates 2D-Coordinates in a very fast way.\n *\n * @author Dylan Grafmyre\n *\n * Based on work by:\n * @author Thomas Diewald\n * @link http://www.openprocessing.org/visuals/?visualID=15599\n *\n * Based on `examples/canvas_lines_colors.html`:\n * @author OpenShift guest\n * @link https://github.com/mrdoob/three.js/blob/8413a860aa95ed29c79cbb7f857c97d7880d260f/examples/canvas_lines_colors.html\n * @see  Line 149 - 186\n *\n * @param center     Center of Hilbert curve.\n * @param size       Total width of Hilbert curve.\n * @param iterations Number of subdivisions.\n * @param v0         Corner index -X, +Y, -Z.\n * @param v1         Corner index -X, +Y, +Z.\n * @param v2         Corner index -X, -Y, +Z.\n * @param v3         Corner index -X, -Y, -Z.\n * @param v4         Corner index +X, -Y, -Z.\n * @param v5         Corner index +X, -Y, +Z.\n * @param v6         Corner index +X, +Y, +Z.\n * @param v7         Corner index +X, +Y, -Z.\n */\nimport * as THREE from 'three';\n\nfunction hilbert3D(\n  center = new THREE.Vector3(0, 0, 0),\n  size = 10,\n  iterations = 1,\n  v0 = 0,\n  v1 = 1,\n  v2 = 2,\n  v3 = 3,\n  v4 = 4,\n  v5 = 5,\n  v6 = 6,\n  v7 = 7) {\n  const half = size / 2;\n  const vec_s = [\n    new THREE.Vector3(center.x - half, center.y + half, center.z - half),\n    new THREE.Vector3(center.x - half, center.y + half, center.z + half),\n    new THREE.Vector3(center.x - half, center.y - half, center.z + half),\n    new THREE.Vector3(center.x - half, center.y - half, center.z - half),\n    new THREE.Vector3(center.x + half, center.y - half, center.z - half),\n    new THREE.Vector3(center.x + half, center.y - half, center.z + half),\n    new THREE.Vector3(center.x + half, center.y + half, center.z + half),\n    new THREE.Vector3(center.x + half, center.y + half, center.z - half),\n  ];\n\n  const vec = [\n    vec_s[v0],\n    vec_s[v1],\n    vec_s[v2],\n    vec_s[v3],\n    vec_s[v4],\n    vec_s[v5],\n    vec_s[v6],\n    vec_s[v7]\n  ];\n\n  // Recurse iterations\n  if (-- iterations >= 0) {\n    const tmp = [];\n\n    Array.prototype.push.apply(tmp, hilbert3D(vec[0], half, iterations, v0, v3, v4, v7, v6, v5, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[1], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[2], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[3], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[4], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[5], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[6], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[7], half, iterations, v6, v5, v2, v1, v0, v3, v4, v7));\n\n    // Return recursive call\n    return tmp;\n  }\n\n  // Return complete Hilbert Curve.\n  return vec;\n}\n\nexport default hilbert3D;\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar colors = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tcolors.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushColor( r, g, b ) {\n\n\t\t\tcolors.push( r, g, b );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t// Clip\n\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t// Perform the perspective divide\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c, material ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// face normal\n\t\t\t\t_vector3.subVectors( v3.position, v2.position );\n\t\t\t\t_vector4.subVectors( v1.position, v2.position );\n\t\t\t\t_vector3.cross( _vector4 );\n\t\t\t\t_face.normalModel.copy( _vector3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = material;\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ||  material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t_face.color.fromArray( colors, a * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushColor: pushColor,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tfunction projectObject( object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t_renderData.lights.push( object );\n\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction addObject( object ) {\n\n\t\t_object = getNextObjectInPool();\n\t\t_object.id = object.id;\n\t\t_object.object = object;\n\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t_object.z = _vector3.z;\n\t\t_object.renderOrder = object.renderOrder;\n\n\t\t_renderData.objects.push( _object );\n\n\t}\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tprojectObject( scene );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tvar objects = _renderData.objects;\n\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\tvar x = positions[ i ];\n\t\t\t\t\t\tvar y = positions[ i + 1 ];\n\t\t\t\t\t\tvar z = positions[ i + 2 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphAttributes.position;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\n\t\t\t\t\t\t\t\tx += ( target.getX( i / 3 ) - positions[ i ] ) * influence;\n\t\t\t\t\t\t\t\ty += ( target.getY( i / 3 ) - positions[ i + 1 ] ) * influence;\n\t\t\t\t\t\t\t\tz += ( target.getZ( i / 3 ) - positions[ i + 2 ] ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( x, y, z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\tvar invW = 1 / _vector4.w;\n\n\t\t_vector4.z *= invW;\n\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t_sprite.id = object.id;\n\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t_sprite.z = _vector4.z;\n\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t_sprite.object = object;\n\n\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t_sprite.material = object.material;\n\n\t\t\t_renderData.elements.push( _sprite );\n\n\t\t}\n\n\t}\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tbc1near = s1.z + s1.w,\n\t\t\tbc2near = s2.z + s2.w,\n\t\t\tbc1far = - s1.z + s1.w,\n\t\t\tbc2far = - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}